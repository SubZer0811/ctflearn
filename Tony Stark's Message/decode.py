import pickle

class Node:

	def __init__(self):
		pass

string = [None] *100

encoded_data
encoding_table = []

def rec(node, i):

	global string
	if(node == None):
		return
	
	if(node.data != '\x00'):
		encoding_table.append((''.join(string[:i]), node.data))
		# print(''.join(string[:i]), node.data)

	string[i] = '0'
	rec(node.left, i+1)
	string[i] = '1'
	rec(node.right, i+1)

if __name__ == "__main__":
	
	# load : get the data from file
	data = pickle.load(open('node_data.txt', "rb"))

	rec(data, 0)
	print("ENCODING TABLE:")
	for i in encoding_table:
		print(i)

	check = ''
	for bit in encoded_data:
		check += str(bit)

		for encoding in encoding_table:
			if(check == encoding[0]):
				print(encoding[1], end='')
				check = ''
				break